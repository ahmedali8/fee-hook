FeeHook_SetBlacklist_Unit_Concrete_Test
├── When caller is not the owner
│   └── It should revert.
│       ├── Because only the owner can modify the blacklist.
│       └── And it should revert with OwnableUnauthorizedAccount.
└── When caller is the owner
    ├── When blacklisting an invalid address
    │   ├── When blacklisting the zero address
    │   │   └── It should revert.
    │   │       ├── Because the zero address cannot be blacklisted.
    │   │       └── And it should revert with "InvalidBlacklistAction".
    │   ├── When blacklisting the contract itself
    │   │   └── It should revert.
    │   │       ├── Because the contract should not be blacklisted.
    │   │       └── And it should revert with "InvalidBlacklistAction".
    │   ├── When blacklisting the pool manager address
    │   │   └── It should revert.
    │   │       ├── Because the pool manager should not be blacklisted.
    │   │       └── And it should revert with "InvalidBlacklistAction".
    │   └── When blacklisting an address excluded from fees or limits
    │       └── It should revert.
    │           ├── Because whitelisted users should not be blacklisted.
    │           └── And it should revert with "InvalidBlacklistAction".
    ├── When blacklisting a valid address
    │   ├── When blacklisting a new user
    │   │   ├── It should update the blacklist status.
    │   │   │   └── Because the user should be flagged as blacklisted.
    │   │   └── It should emit an {AddressBlacklisted} event when a user is blacklisted.
    │   └── When blacklisting a user already blacklisted
    │       └── It should revert.
    │           ├── Because blacklisting a user twice is redundant.
    │           └── And it should revert with "InvalidBlacklistAction".
    ├── When un blacklisting a valid address
    │   ├── When un blacklisting a blacklisted user
    │   │   ├── It should update the blacklist status.
    │   │   │   └── Because the user should no longer be blacklisted.
    │   │   └── It should emit an {AddressBlacklisted} event when a user is un blacklisted.
    │   └── When un blacklisting a user not blacklisted
    │       └── It should revert.
    │           ├── Because un blacklisting a non-blacklisted user is redundant.
    │           └── And it should revert with "InvalidBlacklistAction".
    └── When calling setBlacklistBatch
        ├── When blacklisting multiple users
        │   ├── It should correctly blacklist multiple users.
        │   │   └── Because batch processing should update the blacklist status for each user.
        │   └── It should emit multiple {AddressBlacklisted} events when multiple users are blacklisted.
        └── When un blacklisting multiple users
            ├── It should correctly un blacklist multiple users.
            │   └── Because batch processing should remove the blacklist flag for each user.
            └── It should emit multiple {AddressBlacklisted} events when multiple users are un blacklisted.