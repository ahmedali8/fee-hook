FeeHook_SetWhitelist_Unit_Concrete_Test
├── When caller is not the owner
│   └── It should revert.
│       ├── Because only the owner can modify the whitelist.
│       └── And it should revert with OwnableUnauthorizedAccount.
└── When caller is the owner
    ├── When whitelisting an invalid address
    │   ├── When whitelisting the zero address
    │   │   └── It should revert.
    │   │       ├── Because the zero address cannot be whitelisted.
    │   │       └── And it should revert with "InvalidWhitelistAction".
    │   ├── When whitelisting the contract itself
    │   │   └── It should revert.
    │   │       ├── Because the contract should not be whitelisted.
    │   │       └── And it should revert with "InvalidWhitelistAction".
    │   └── When whitelisting an address with unchanged settings
    │       └── It should revert.
    │           ├── Because no change is being made.
    │           └── And it should revert with "InvalidWhitelistAction".
    ├── When whitelisting a valid address
    │   ├── When adding a new user to the whitelist
    │   │   ├── It should update the {isExcludedFromFees} mapping.
    │   │   │   └── Because the user should be marked as fee-exempt.
    │   │   ├── It should update the {isExcludedFromLimits} mapping.
    │   │   │   └── Because the user should be marked as limit-exempt.
    │   │   └── It should emit an {AddressWhitelisted} event when a user is whitelisted.
    │   └──When modifying an existing whitelist entry
    │       ├── When modifying only fee exemption
    │       │   ├── It should update the {isExcludedFromFees} mapping.
    │       │   │   └── Because the fee exemption status should change.
    │       │   ├── It should not update the {isExcludedFromLimits} mapping.
    │       │   │   └── Because the limit exemption remains unchanged.
    │       │   └── It should emit an {AddressWhitelisted} event when fee exemption is modified.
    │       └── When modifying only limit exemption
    │           ├── It should update the {isExcludedFromLimits} mapping.
    │           │   └── Because the limit exemption status should change.
    │           ├── It should not update the {isExcludedFromFees} mapping.
    │           │   └── Because the fee exemption remains unchanged.
    │           └── It should emit an {AddressWhitelisted} event when limit exemption is modified.
    └── When calling setWhitelistBatch
        ├── When whitelisting multiple users
        │   ├── It should correctly update the {isExcludedFromFees} mapping for all addresses.
        │   │   └── Because each address should be marked as fee-exempt.
        │   ├── It should correctly update the {isExcludedFromLimits} mapping for all addresses.
        │   │   └── Because each address should be marked as limit-exempt.
        │   └── It should emit multiple {AddressWhitelisted} events when multiple users are whitelisted.
        └── When modifying whitelist entries in a batch
            ├── When modifying only fee exemptions
            │   ├── It should update the {isExcludedFromFees} mapping for all addresses.
            │   │   └── Because the fee exemption status should change.
            │   ├── It should not update the {isExcludedFromLimits} mapping.
            │   │   └── Because the limit exemption remains unchanged.
            └── When modifying only limit exemptions
                ├── It should update the {isExcludedFromLimits} mapping for all addresses.
                │   └── Because the limit exemption status should change.
                └── It should not update the {isExcludedFromFees} mapping.
                    └── Because the fee exemption remains unchanged.